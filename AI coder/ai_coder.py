import os
import streamlit as st
from groq import Groq 

st.set_page_config(
    page_title="AI Coder",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded"
)

CUSTOM_PROMPT = """
Voc√™ √© o "AI Coder", um assistente de programa√ß√£o especializado em ajudar desenvolvedores a escrever, revisar e depurar c√≥digo. Voc√™ √© capaz de entender m√∫ltiplas linguagens de programa√ß√£o, incluindo Python, JavaScript, Java, C++, Ruby, e mais. Seu objetivo √© fornecer solu√ß√µes claras e eficientes para problemas de codifica√ß√£o, sugerir melhores pr√°ticas e ajudar na otimiza√ß√£o do c√≥digo.

REGRAS DE OPERA√á√ÉO:
1. **Foco na Programa√ß√£o**: Concentre-se exclusivamente em quest√µes relacionadas √† programa√ß√£o e desenvolvimento de software.
2. **Estrutura de Resposta**: Forne√ßa respostas estruturadas com exemplos de c√≥digo, explica√ß√µes detalhadas, sugest√µes de melhorias, documenta√ß√£o de refer√™ncia (Insira no final da resposta uma se√ß√£o mostrando a documenta√ß√£o), clareza e precis√£o.
3. **Linguagens Suportadas**: Esteja preparado para lidar com uma variedade de linguagens de programa√ß√£o e frameworks.
4. **Melhores Pr√°ticas**: Sempre sugira melhores pr√°ticas de codifica√ß√£o, incluindo seguran√ßa, efici√™ncia e legibilidade.
5. **Depura√ß√£o**: Ajude na identifica√ß√£o e corre√ß√£o de bugs, fornecendo solu√ß√µes passo a passo.
6. **Atualiza√ß√£o Cont√≠nua**: Mantenha-se atualizado com as √∫ltimas tend√™ncias e tecnologias em desenvolvimento de software.
7. **Limita√ß√µes**: Se a pergunta estiver fora do escopo de programa√ß√£o, informe educadamente que voc√™ s√≥ pode ajudar com quest√µes relacionadas a desenvolvimento de software.
"""
with st.sidebar:
    st.title("ü§ñ AI Coder")
    st.markdown("Um assistente de IA focado em ajudar desenvolvedores com suas necessidades de codifica√ß√£o.")
    groq_api_key = st.text_input(
        "Insira sua chave de API Groq",
        type="password",
        help="Obtenha sua chave de API em https://console.groq.com/keys"
        )
    
    st.markdown("---")
    st.markdown("Desenvolvido para ajudar desenvolvedores a escrever, revisar e depurar c√≥digo de forma eficiente. A IA pode cometer erros, sempre revise o c√≥digo gerado.")

    st.markdown("---")
    st.markdown("Feito por Igor Jos√© - https://github.com/IgorJNC/Codes")

st.title("ü§ñ AI Coder")

st.title("Uma IA focada em ajudar desenvolvedores com suas necessidades de codifica√ß√£o.")

st.caption("Fa√ßa sua pergunta e a IA responder√° com c√≥digo, explica√ß√µes e sugest√µes.")

if "messages" not in st.session_state:
    st.session_state.messages = []

for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

client = None

if groq_api_key:
    try:
        client = Groq(api_key = groq_api_key)
    
    except Exception as e:
        st.sidebar.error(f"Erro ao conectar com a API Groq: {e}")
        st.stop()

elif st.session_state.messages:
    st.warning("Por favor, insira sua chave de API Groq na barra lateral.")

if prompt := st.chat_input("Qual √© a sua d√∫vida? "):

    if not client:
        st.warning("Por favor, insira sua chave de API Groq na barra lateral.")
        st.stop()
    
    st.session_state.messages.append({"role": "user", "content": prompt})

    with st.chat_message("user"):
        st.markdown(prompt)

    messages_for_api = [{"role": "system", "content": CUSTOM_PROMPT}]
    for message in st.session_state.messages:
        messages_for_api.append(message)

    with st.chat_message("assistant"):

        with st.spinner("Analisando a sua d√∫vida..."):

            try:

                chat_completion = client.chat.completions.create(
                    messages = messages_for_api,
                    model = "openai/gpt-oss-20b",
                    temperature = 0.7,
                    max_tokens = 2048,
                )

                ai_resposta = chat_completion.choices[0].message.content

                st.markdown(ai_resposta)

                st.session_state.messages.append({"role": "assistant", "content": ai_resposta})

            except Exception as e:
                st.error(f"Ocorreu um erro ao processar sua solicita√ß√£o: {e}")

st.markdown(
    """
    <div style="text-align: center; color: gray;">
        <hr>
        <p>Feito por Igor Jos√©</p>
    <div>
    """,
    unsafe_allow_html=True
)
